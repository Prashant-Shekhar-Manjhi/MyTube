{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Desktop/web Development/ReactJS/Projects/mini-youtube/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport VideoList from \"./components/VideoList\";\nimport SearchBar from \"./components/SearchBar\"; // const APIkey_1 = \"AIzaSyAtTWostq1MsBKVBHh6HeQ2bX6y6xj8YyE\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIkey_2 = \"AIzaSyB6uu8KTL1PayJX2z4aNUTxFmi3Ry16fSM\";\nconst APIkey_youtube_search = \"AIzaSyA5tO9GTE2eeYVJevuaZhtFhW_-FL1oA9s\";\nconst playlistId = \"PL3oW2tjiIxvTSdJ4zqjL9dijeZ0LjcuGS\";\n\nfunction App() {\n  _s();\n\n  const [results, setResults] = useState();\n  const [video, setVideo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const clickTitleHandler = video => {\n    setLoading(true);\n    setVideo(video);\n  };\n\n  const endHandler = () => {\n    if (results.indexOf(video) === results.length - 1) {\n      setVideo(results[0]);\n    } else setVideo(results[results.indexOf(video) + 1]);\n  };\n\n  const readyHandler = () => {\n    setLoading(false);\n  };\n\n  function searchVideo(keyword) {\n    const url = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${keyword}&type=video&key=${APIkey_youtube_search}`;\n    fetch(url).then(response => {\n      if (!response.ok) throw new Error(`${response.status} Videos not Found `);\n      return response.json();\n    }).then(data => {\n      const filterSearchedData = data.items.map(item => {\n        return {\n          id: Math.random().toString(),\n          title: item.snippet.title,\n          desc: item.snippet.description,\n          vid: item.id.videoId,\n          publishedAt: item.snippet.publishedAt,\n          channelTitle: item.snippet.channelTitle,\n          imageURL: item.snippet.thumbnails.default.url\n        };\n      });\n      setResults(filterSearchedData);\n      setVideo(filterSearchedData[0]);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n    });\n  }\n\n  const onSearchHandler = keyword => {\n    setLoading(true);\n    searchVideo(keyword);\n  };\n\n  function getPlaylist(playlistId) {\n    const url = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=50&playlistId=${playlistId}&key=${APIkey_2}`;\n    fetch(url).then(response => {\n      if (!response.ok) throw new Error(`${response.status} Playlist not found.`);\n      return response.json();\n    }).then(data => {\n      const filteredData = data.items.map(item => {\n        return {\n          id: item.id,\n          title: item.snippet.title,\n          desc: item.snippet.description,\n          vid: item.contentDetails.videoId,\n          publishedAt: item.snippet.publishedAt,\n          channelTitle: item.snippet.channelTitle,\n          imageURL: item.snippet.thumbnails.default.url\n        };\n      });\n      setResults(filteredData);\n      setVideo(filteredData[0]);\n      setLoading(false);\n    }).catch(err => {\n      setError(err);\n    });\n  }\n\n  useEffect(() => {\n    getPlaylist(playlistId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: onSearchHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), results && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searched-videos\",\n        children: /*#__PURE__*/_jsxDEV(VideoList, {\n          videoAPI: results,\n          onClickTitle: clickTitleHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searched-video\",\n        children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n          width: \"100%\",\n          height: \"65em\",\n          controls: true,\n          playing: true,\n          url: `https://youtu.be/${video.vid}`,\n          onEnded: endHandler,\n          onReady: readyHandler,\n          className: \"video-player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"video-title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Published At -\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), \"- \", video.publishedAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), video.desc && video.desc.length > 500 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: video.desc.slice(0, 500) + \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: video.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: `${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c9ikWN5HOCXXcvtfOLJFMkWulRU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/prashant/Desktop/web Development/ReactJS/Projects/mini-youtube/src/App.js"],"names":["React","useState","useEffect","ReactPlayer","Header","VideoList","SearchBar","APIkey_2","APIkey_youtube_search","playlistId","App","results","setResults","video","setVideo","error","setError","loading","setLoading","clickTitleHandler","endHandler","indexOf","length","readyHandler","searchVideo","keyword","url","fetch","then","response","ok","Error","status","json","data","filterSearchedData","items","map","item","id","Math","random","toString","title","snippet","desc","description","vid","videoId","publishedAt","channelTitle","imageURL","thumbnails","default","catch","onSearchHandler","getPlaylist","filteredData","contentDetails","err","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport VideoList from \"./components/VideoList\";\nimport SearchBar from \"./components/SearchBar\";\n\n// const APIkey_1 = \"AIzaSyAtTWostq1MsBKVBHh6HeQ2bX6y6xj8YyE\";\nconst APIkey_2 = \"AIzaSyB6uu8KTL1PayJX2z4aNUTxFmi3Ry16fSM\";\nconst APIkey_youtube_search = \"AIzaSyA5tO9GTE2eeYVJevuaZhtFhW_-FL1oA9s\";\nconst playlistId = \"PL3oW2tjiIxvTSdJ4zqjL9dijeZ0LjcuGS\";\n\nfunction App() {\n  const [results, setResults] = useState();\n  const [video, setVideo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const clickTitleHandler = (video) => {\n    setLoading(true);\n    setVideo(video);\n  };\n\n  const endHandler = () => {\n    if (results.indexOf(video) === results.length - 1) {\n      setVideo(results[0]);\n    } else setVideo(results[results.indexOf(video) + 1]);\n  };\n\n  const readyHandler = () => {\n    setLoading(false);\n  };\n\n  function searchVideo(keyword) {\n    const url = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${keyword}&type=video&key=${APIkey_youtube_search}`;\n    fetch(url)\n      .then((response) => {\n        if (!response.ok)\n          throw new Error(`${response.status} Videos not Found `);\n        return response.json();\n      })\n      .then((data) => {\n        const filterSearchedData = data.items.map((item) => {\n          return {\n            id: Math.random().toString(),\n            title: item.snippet.title,\n            desc: item.snippet.description,\n            vid: item.id.videoId,\n            publishedAt: item.snippet.publishedAt,\n            channelTitle: item.snippet.channelTitle,\n            imageURL: item.snippet.thumbnails.default.url,\n          };\n        });\n\n        setResults(filterSearchedData);\n        setVideo(filterSearchedData[0]);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }\n\n  const onSearchHandler = (keyword) => {\n    setLoading(true);\n    searchVideo(keyword);\n  };\n\n  function getPlaylist(playlistId) {\n    const url = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=50&playlistId=${playlistId}&key=${APIkey_2}`;\n\n    fetch(url)\n      .then((response) => {\n        if (!response.ok)\n          throw new Error(`${response.status} Playlist not found.`);\n        return response.json();\n      })\n      .then((data) => {\n        const filteredData = data.items.map((item) => {\n          return {\n            id: item.id,\n            title: item.snippet.title,\n            desc: item.snippet.description,\n            vid: item.contentDetails.videoId,\n            publishedAt: item.snippet.publishedAt,\n            channelTitle: item.snippet.channelTitle,\n            imageURL: item.snippet.thumbnails.default.url,\n          };\n        });\n\n        setResults(filteredData);\n        setVideo(filteredData[0]);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  }\n\n  useEffect(() => {\n    getPlaylist(playlistId);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header isLoading={loading} />\n\n      <SearchBar onSearch={onSearchHandler} />\n\n      {results && !error && (\n        <div className=\"content\">\n          <div className=\"searched-videos\">\n            <VideoList videoAPI={results} onClickTitle={clickTitleHandler} />\n          </div>\n          <div className=\"searched-video\">\n            <ReactPlayer\n              width=\"100%\"\n              height=\"65em\"\n              controls\n              playing\n              url={`https://youtu.be/${video.vid}`}\n              onEnded={endHandler}\n              onReady={readyHandler}\n              className=\"video-player\"\n            />\n            <h3 className=\"video-title\">{video.title}</h3>\n            <p className=\"date\">\n              <span>Published At -</span>- {video.publishedAt}\n            </p>\n            {video.desc && video.desc.length > 500 ? (\n              <p className=\"description\">{video.desc.slice(0, 500) + \"...\"}</p>\n            ) : (\n              <p className=\"description\">{video.desc}</p>\n            )}\n          </div>\n        </div>\n      )}\n      {error && <p className=\"error\">{`${error}`}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}