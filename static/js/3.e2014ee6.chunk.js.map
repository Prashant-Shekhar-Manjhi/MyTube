{"version":3,"sources":["pages/News.js"],"names":["News","useState","results","setResults","video","setVideo","error","setError","loading","setLoading","history","useHistory","useEffect","APIkey","url","fetch","then","response","ok","Error","status","json","data","filteredData","items","map","item","id","Math","random","toString","title","snippet","channelTitle","desc","description","vid","publishedAt","imageURL","thumbnails","medium","catch","fetchNews","process","isLoading","onSearch","keyword","push","className","endHandler","indexOf","length","readyHandler","videoAPI","onClickTitle"],"mappings":"kOASe,SAASA,IACtB,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACIC,EAAUC,cAwDd,OAJAC,qBAAU,YA/BV,SAAmBC,GACjB,IAAMC,EAAG,wIAAoID,GAE7IE,MAAMD,GACHE,MAAK,SAACC,GACL,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,qBACxB,OAAOH,EAASI,UAEjBL,MAAK,SAACM,GACL,IAAMC,EAAeD,EAAKE,MAAMC,KAAI,SAACC,GACnC,MAAO,CACLC,GAAIC,KAAKC,SAASC,WAClBC,MAAOL,EAAKM,QAAQC,aACpBC,KAAMR,EAAKM,QAAQG,YACnBC,IAAKV,EAAKC,GACVU,YAAaX,EAAKM,QAAQK,YAC1BJ,aAAa,YACbK,SAAUZ,EAAKM,QAAQO,WAAWC,OAAO1B,QAI7CX,EAAWoB,GACXlB,EAASkB,EAAa,IACtBd,GAAW,MAEZgC,OAAM,SAACnC,GACNC,EAASD,GACTG,GAAW,MAKfiC,CA5D0BC,6CA6DzB,IAGD,eAAC,WAAD,WACE,cAAC,IAAD,CAAQC,UAAWpC,IACnB,cAAC,IAAD,CAAWqC,SAzDS,SAACC,GACvBrC,GAAW,GACXC,EAAQqC,KAAR,0BAAgCD,OAwD7B5C,IAAYI,GACX,sBAAK0C,UAAU,UAAf,UACE,cAAC,IAAD,CACE5C,MAAOA,EACP6C,WApDS,WACb/C,EAAQgD,QAAQ9C,KAAWF,EAAQiD,OAAS,EAC9C9C,EAASH,EAAQ,IACZG,EAASH,EAAQA,EAAQgD,QAAQ9C,GAAS,KAkDzCgD,aA/CW,WACnB3C,GAAW,MAgDL,qBAAKuC,UAAU,kBAAf,SACE,cAAC,IAAD,CAAWK,SAAUnD,EAASoD,aA7Dd,SAAClD,GACzBK,GAAW,GACXJ,EAASD,WA+DNE,GAAS,mBAAG0C,UAAU,QAAb,mBAAyB1C","file":"static/js/3.e2014ee6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport WatchVideo from \"../components/WatchVideo\";\nimport VideoList from \"../components/VideoList\";\nimport Header from \"../components/Header\";\nimport SearchBar from \"../components/SearchBar\";\nimport { Fragment } from \"react\";\nconst APIkey_youtube_search = process.env.REACT_APP_API_KEY_SEARCH_1;\n\nexport default function News() {\n  const [results, setResults] = useState();\n  const [video, setVideo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  let history = useHistory();\n\n  const onSearchHandler = (keyword) => {\n    setLoading(true);\n    history.push(`/search?keyword=${keyword}`);\n  };\n\n  const clickTitleHandler = (video) => {\n    setLoading(true);\n    setVideo(video);\n  };\n\n  const endHandler = () => {\n    if (results.indexOf(video) === results.length - 1) {\n      setVideo(results[0]);\n    } else setVideo(results[results.indexOf(video) + 1]);\n  };\n\n  const readyHandler = () => {\n    setLoading(false);\n  };\n  function fetchNews(APIkey) {\n    const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails&id=W6lv5HJnJBA%2CHiGkuE_DBvg%2CMN8p-Vrn6G0&key=${APIkey}`;\n\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) throw new Error(`${response.status} News not Found.`);\n        return response.json();\n      })\n      .then((data) => {\n        const filteredData = data.items.map((item) => {\n          return {\n            id: Math.random().toString(),\n            title: item.snippet.channelTitle,\n            desc: item.snippet.description,\n            vid: item.id,\n            publishedAt: item.snippet.publishedAt,\n            channelTitle: `Live News`,\n            imageURL: item.snippet.thumbnails.medium.url,\n          };\n        });\n\n        setResults(filteredData);\n        setVideo(filteredData[0]);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    fetchNews(APIkey_youtube_search);\n  }, []);\n\n  return (\n    <Fragment>\n      <Header isLoading={loading} />\n      <SearchBar onSearch={onSearchHandler} />\n      {results && !error && (\n        <div className=\"content\">\n          <WatchVideo\n            video={video}\n            endHandler={endHandler}\n            readyHandler={readyHandler}\n          />\n          <div className=\"searched-videos\">\n            <VideoList videoAPI={results} onClickTitle={clickTitleHandler} />\n          </div>\n        </div>\n      )}\n      {error && <p className=\"error\">{`${error}`}</p>}\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}